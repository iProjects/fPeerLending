//====================================================================================================
// Base code generated with Inertia: BE Gen (Build 2.5.5049.15162)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by francis.muraya at KPC0201M on 11/20/2014 15:39:24 
//====================================================================================================


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Globalization;
using System.Linq;
using System.Runtime.Serialization;


namespace fPeerLending.Entities
{
    /// <summary>
    /// Represents a row of MailingGroup data.
    /// </summary>
    [Serializable]
    [DataContract]
    public partial class MailingGroup
    {
        /// <summary>
        /// Gets or sets a int value for the GroupId column.
        /// </summary>
        [DataMember] 
        public int GroupId { get; set; }

        /// <summary>
        /// Gets or sets a string value for the ShortCode column.
        /// </summary>
        [DataMember]
        [Display(Name = "Short Code")]
        public string ShortCode { get; set; }

        /// <summary>
        /// Gets or sets a int value for the Creator column.
        /// </summary>
        [DataMember]
        public int Creator { get; set; }

        /// <summary>
        /// Gets or sets a DateTime value for the CreatedOn column.
        /// </summary>
        [DataMember]
        public DateTime CreatedOn { get; set; }

        /// <summary>
        /// Gets or sets a DateTime value for the LastModified column.
        /// </summary>
        [DataMember]
        public DateTime LastModified { get; set; }

        /// <summary>
        /// Gets or sets a int value for the ParentGroupId column.
        /// </summary>
        [DataMember]
        public int ParentGroupId { get; set; }

        public MailingGroup()
        {
            ChildNode = new List<MailingGroup>();
        }
         
        public string NodeName
        {
            get { return GetNodeName(); }
        }
        public IList<MailingGroup> ChildNode { get; set; }

        public string GetNodeName()
        {
            string temp = ChildNode.Count > 0 ? "This Group Has [ " + ChildNode.Count + " ] Sub Groups" : "This Group Has [ " + ChildNode.Count + " ] Sub Groups";
            return this.ShortCode + " - " + this.GroupId;
        }
    }
}
